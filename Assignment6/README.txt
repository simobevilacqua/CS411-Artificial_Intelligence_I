Programming language: Python (Python3)

The program reads the grid configuration along with the moves descriptions
from a JSON file. This file is generated by the python script called
inputGenerator.py.

To modify the settings of the grid in the inputGenerator.py script it's possible to change:
 - number of rows: rows
 - number of columns: cols
 - obstacles in the grid: obstacles
 - terminal states with positive reward: terminals_pos
 - terminal states with negative reward: terminals_neg
 - probability of completing the actual move: prob_move
 - probability of sliding to the left: prob_left
 - probability of sliding to the right: prob_right
 - probability of sliding to the back: prob_back
 - positive reward: reward_pos
 - negative reward: reward_neg
 - default reward: reward_def
 - value discount factor: gamma
 - value for epsilon: epsilon

This script generates an input.json file containing the values of gamma and
epsilon, but also the possible transitions (T) with the related
probabilities and the rewards (R) for each possible transition.
It can be run using the command:
python3 inputGenerator.py

The actual program takes as input the name of the JSON file containing the grid
configuration, so it can be run using the command:
python3 assignment6.py input.json

The following command can be useful to run both the input generator script
and the actual program at the same time:
python3 inputGenerator.py; python3 assignment6.py input.json
